
9.2  在JX1807项目示例基础上添加的功能点：
1 轮到用户出牌时，只能出对应的牌型，并且大于已出牌。否则点击“出牌”按钮提示出牌错误。
2 轮到电脑被动出牌时，只能出对应的牌型，并且大于已出牌。 

----功能点的实现设计步骤--------------------
1 创建modal.logic包, 以后的AI计算都放在这个包中。
2 定义各种牌型，创建CGT类，存放牌型常量，
  public static int  cgERROR              = -1; // 错误类型
	public static int  cgZERO               = 0; // 不出类型
	public static int  cgSINGLE             = 1; // 单牌类型
	public static int  cgDOUBLE             = 2; // 对牌类型
	public static int  cgTHREE              = 3; // 三条类型
	......
	public static int  cgBOMB_CARD          = 13; // 炸弹类型
	public static int  cgKING_CARD          = 14; // 王炸类型
	
3 定义牌型组合数据类CardGroupData， 记录每一个牌型的张数、最大值、价值。
public class CardGroupData {
	// 枚举类型
	public int cgType = CGT.cgERROR;  //常量	
	public int nMaxCard = 0; // 牌中决定大小的牌值，用于对比
	public int nCount = 0;   // 含牌的个数	
	public int nValue = 0;   // 该牌的价值, 需要价值评估系统计算出来得分
	
	/* 检查指定的无花色牌数组是否只是一手牌 ，根据无花色张数数组计算比较方便 。
	输入参数： 无花色牌数组。 
	返回： 牌类型数据CardGroupData， 不是一手牌返回错误类型（cgERROR）
	*/
	public static CardGroupData is_OneHandType(int[] arr);
	 判断是单张、一对、三张、炸弹、王炸等等牌型。
	
}

4 创建逻辑类Logic，存储无花色手牌数组，识别已出的牌型，计算跟牌时的具体出法。

4.1 定义输入的数据：
	//场上打出的牌数据
	public ArrayList<Card> inCardList;       // 场上刚刚打出的牌列表
	public CardGroupData inCardGroupData;    // 场上打出的牌型
	public ArrayList<Integer> in_value_list; // 无花色牌列表，长度可变，
	// 总共18张，前三个元素0/1/2不存储数据，从3开始存储。序号就表示牌数值。张数就是每个元素的值
	// 序号：     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
	// 牌数值： - - - 3 4 5 6 7 8 9 10 J   Q  K  A 2     小王 大王
	// 张数：     - - - 1 1 0 0 4 1 1  1 1   1  2  3 0   1 0 总共17张
	public int[] in_value_array = null; // 无花色牌数组，长度固定18.

4.2 定义构造方法
	/*
	 * 构造方法，完成数据转换和初始化 输入参数: playerCardList： 玩家手上的牌列表，这是有花色的表达方式
	 * discardList：场上打出的牌列表
	 */
	public Logic(ArrayList<Card> player_handcard_List, ArrayList<Card> inCardList){
		 把玩家手牌转换数据模型
		 把场上打出的牌转换数据模型
		 为将要出的牌定义数据模型
	}
	
4.3 定义跟牌策略函数， 跟单张、一对、三个、三带一、炸弹等的处理方法


-----------------------------------
8.23 斗地主项目需求分析，分组后引导讨论下列内容，让各组人员上台讲述思考结果。纵观上午表现，学员的讨论意愿不够，分析还不购物仔细深入。全部时间用来做讨论了，开工会推迟到明天下午。郑志颖、邓方戟几乎不参与讨论，需要给二人明天点明这点和后果。 

功能需求讨论
1 游戏分为几个阶段？ 每个阶段干什么事情？
2 游戏有几个窗口？都是什么布局？
3 游戏需要用到哪些技术点？
4 你心中的自动发牌方法？自动叫牌方法？出牌方法？
5 游戏的数学模型有哪些？ 牌的表达、手牌的记录、牌型的表达、玩家的类型
6 你决定实现哪些功能？
--------------------------------------------------


1 叫完地主后，3张底牌要插入到玩家的牌中，并且这三张位置突出显示。 显示2秒后恢复正常。
  东西电脑玩家不用插牌动作。
  
2 3人出牌计算等待时间，出牌一方位置显示倒计时秒数。玩家每次出牌时间是20s

3 出牌线程，分别计算3人的牌。

4 先开发用户主动出牌功能，用鼠标点击就能实现，不用考虑各种牌型，让用户自己头疼去吧。

----------------
牌型识别模块 ：  识别出手中的牌指定牌型（王炸、炸弹、顺子、三张、对子、单张）

从花色记录--->到无花色张数列表、无花色牌序列，转换方法已经看懂。。。
for (vector<int>::iterator iter = color_nHandCardList.begin(); iter != color_nHandCardList.end(); iter++)  
    {  
        value_nHandCardList.push_back((*iter / 4)+3);     
        value_aHandCardList[(*iter / 4) + 3]++;  
    }    

明确了如何判断剩下的牌是否是一手牌及牌型。
    方法：利用无花色数组计算各种牌型是否满足。

---------------------------------------------
被动出牌算法的基本步骤。 下面的步骤针对场上已出的每种牌型，就是说，上家打的每种牌型，都要进行以下分析，所以为了方便，编写成一个个的函数。

我把出牌逻辑分为四个阶段，也就是策略的优先级。分别是：
【直接打光手牌】→【同类型牌压制】→【炸弹王炸压制】→【不出】

第一阶段【直接打光手牌】就是说如果我们可以一次性把手牌打出，那就不用考虑接下来价值之类的问题了，因为已经赢了。这种情况可能是对方打出的牌型和你一样且你比他大，或者你剩的牌是炸弹王炸。
